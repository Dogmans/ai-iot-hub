# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the whole .idea directory:
.idea/

# AI-IoT Hub specific
# Generated device communication tools (these are dynamically created)
tools/generated/*.py
!tools/generated/__init__.py
!tools/generated/.gitkeep

# Cached device specifications
devices/generated_specs/
!devices/generated_specs/.gitkeep

# Discovered devices (contains IP addresses and network info)
devices/discovered_devices.json
devices/device_cache.json
devices/network_topology.json

# Configuration files with credentials
config/credentials.json
config/hub_config.yaml
config/device_registry.json
config/user_config.yaml
config/runtime_config.json

# Device communication logs and temporary files
device_logs/
communication_cache/
protocol_cache/
*.device_log
device_*.tmp
protocol_*.cache

# Generated code artifacts
generated_*.py
temp_code_*.py
code_gen_*.py
agent_generated_*.py

# Logs
logs/
*.log

# Temporary files
temp/
tmp/
.tmp/
*.tmp
*.temp
.cache/
__temp__/
.temporary/

# Python specific temporary files
*.pyc.bak
*.pyo
*.pyd
.Python.*
pip-wheel-metadata/

# IDE specific
.vscode/settings.json
.vscode/launch.json
.vscode/.ropeproject
*.swp
*.swo
*~
.#*
\#*#
*#
.*.kate-swp
.swp.*

# Editor backup files
*~
*.bak
*.backup
*.old
*.orig
*.save
*.autosave

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Network scan results
network_scan_*.json
device_discovery_*.json

# Generated documentation
docs/build/
docs/_build/

# Test artifacts
.coverage.*
htmlcov/
.pytest_cache/
test-results/
.tox/
.testmondata
junit.xml
test_*.xml
nosetests.xml

# Runtime and process files
*.pid
*.lock
*.sock
.restart

# AI/ML specific temporary files
*.model
*.pkl
*.pickle
__models__/
.huggingface/
.cache/huggingface/

# Smolagents specific
.smolagents/
smolagents_cache/
agent_cache/

# Additional Python cache
.ruff_cache/
.black_cache/
.isort_cache/