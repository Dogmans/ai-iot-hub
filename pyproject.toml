[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-iot-hub"
version = "0.1.0"
description = "An intelligent IoT hub using smolagents for dynamic device discovery and communication"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI-IoT Hub Team", email = "contact@ai-iot-hub.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
    "Topic :: Internet of Things",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    # Essential dependencies only (to avoid network issues)
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "colorama>=0.4.6"
]

[project.optional-dependencies]
# Core AI/ML dependencies (install separately if needed)
ai = [
    "smolagents>=0.1.0",
    "huggingface-hub>=0.19.0",
    "transformers>=4.35.0"
]

# Document processing
docs-processing = [
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.10.0",
    "python-docx>=1.1.0",
    "beautifulsoup4>=4.12.0"
]

# HTTP and web
web = [
    "aiohttp>=3.9.0",
    "websockets>=12.0"
]

# IoT Communication protocols
iot = [
    "paho-mqtt>=1.6.0",
    "pymodbus>=3.5.0",
    "pyserial>=3.5"
]

# Network discovery (may require system dependencies)
network = [
    "python-nmap>=0.7.1",
    "scapy>=2.5.0",
    "zeroconf>=0.39.0",
    "netdisco>=2.8.2", 
    "upnpclient>=0.0.8",
    "mac-vendor-lookup>=0.1.11"
]

# Bluetooth (optional)
bluetooth = [
    "bleak>=0.21.0",
    "bluetooth-adapters>=0.16.0"
]

# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0"
]

# Documentation generation
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0"
]

# All optional dependencies
all = [
    "smolagents>=0.1.0",
    "huggingface-hub>=0.19.0", 
    "transformers>=4.35.0",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.10.0",
    "python-docx>=1.1.0",
    "beautifulsoup4>=4.12.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "paho-mqtt>=1.6.0",
    "pymodbus>=3.5.0",
    "pyserial>=3.5",
    "python-nmap>=0.7.1",
    "scapy>=2.5.0",
    "bleak>=0.21.0"
]

[project.urls]
"Homepage" = "https://github.com/ai-iot/ai-iot-hub"
"Bug Reports" = "https://github.com/ai-iot/ai-iot-hub/issues"
"Source" = "https://github.com/ai-iot/ai-iot-hub"
"Documentation" = "https://ai-iot-hub.readthedocs.io/"

[project.scripts]
ai-iot-hub = "src.hub.ai_controller:main"
ai-iot-interactive = "interactive_hub:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "agents", "hub", "tools"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "smolagents.*",
    "nmap",
    "scapy.*",
    "paho.mqtt.*",
    "pymodbus.*",
    "bleak.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]